FROM --platform=$TARGETPLATFORM registry.cn-chengdu.aliyuncs.com/little_bee/spkdfs_runtime:latest AS vcpkg_source

FROM --platform=$BUILDPLATFORM registry.cn-chengdu.aliyuncs.com/little_bee/spkdfs_builder:latest AS builder
ARG TARGETARCH
ARG TARGETPLATFORM
RUN apt update && apt install -y --no-install-recommends crossbuild-essential-${TARGETARCH} && apt clean;
COPY . /spkdfs
COPY --from=vcpkg_source /vcpkg /vcpkg
WORKDIR /spkdfs
RUN if [ "$TARGETPLATFORM" = "linux/amd64" ]; then \
  echo 'export COMPILER=/usr/bin/x86_64-linux-gnu-g++' >> ${ENV_FILE} && \
  echo 'export TRIPLET=x64-linux-dynamic' >> ${ENV_FILE}; \
  elif [ "$TARGETPLATFORM" = "linux/arm64" ]; then \
  echo 'export COMPILER=/usr/bin/aarch64-linux-gnu-g++' >> ${ENV_FILE} && \
  echo 'export TRIPLET=arm64-linux-dynamic' >> ${ENV_FILE}; \
  else \
  echo "Unsupported architecture: $TARGETPLATFORM" && exit 1; \
  fi

RUN . ${ENV_FILE} && cmake -S . -B build \
  -DCMAKE_BUILD_TYPE=Debug \
  -DVCPKG_TARGET_TRIPLET=${TRIPLET} \
  -DCMAKE_CXX_COMPILER=${COMPILER} \
  -DCMAKE_TOOLCHAIN_FILE=/vcpkg/scripts/buildsystems/vcpkg.cmake && \
  cmake --build build -j $(nproc)

FROM --platform=$TARGETPLATFORM registry.cn-chengdu.aliyuncs.com/little_bee/spkdfs_runtime:latest
COPY --from=builder /spkdfs/build/node /node
ENTRYPOINT [ "/node" ]